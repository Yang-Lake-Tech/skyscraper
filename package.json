{
  "name": "usm-movie-extras",
  "version": "2.0.0",
  "description": "Universal Movies Extras Experience, microHTML",
  "devDependencies": {
    "babel-core": "^6.26.0",
    "babel-plugin-transform-react-jsx": "^6.24.1",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-react": "^6.24.1",
    "grunt": "^1.0.1",
    "grunt-babel": "^7.0.0",
    "grunt-concurrent": "^2.3.1",
    "grunt-contrib-clean": "^1.1.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-requirejs": "^1.0.0",
    "grunt-contrib-sass": "^1.0.0",
    "grunt-contrib-watch": "^1.0.0",
    "grunt-hashres": "^0.4.1",
    "grunt-run": "^0.7.0",
    "guid-cli": "^0.1.2"
  },
  "scripts": {
    "set-title": "npm config set usm-movie-extras:title $USM_MOVIE_TITLE",
    "pre-process-code": "./pre_process_code $npm_package_config_title -config && ./pre_process_code $npm_package_config_title -source",
    "create-bash-profile-if-necessary": "if [[ ! -f ~/.bash_profile ]]; then touch ~/.bash_profile; else exit 0; fi",
    "install-ngs": "npm run create-bash-profile-if-necessary && source ~/.bash_profile && ../production/utils/ngs/install_ngs -s",
    "uninstall-ngs": "../production/utils/ngs/uninstall_ngs -s",
    "setup": "echo Y | gem install sass && npm install && npm run install-ngs && npm run set-title && npm run pre-process-code",
    "predownload-assets": "npm run install-ngs && source ~/.bash_profile && ngs settings import $PWD/movies/$npm_package_config_title/ngs_settings.json && ngs settings set download_path $PWD",
    "download-assets-x1": "npm run predownload-assets && source ~/.bash_profile && ngs download -d Assets/Image && ngs download -d Assets/Fonts && npm run postdownload-assets",
    "download-assets-mobile": "npm run predownload-assets && source ~/.bash_profile && ngs download -d Assets/Mobile && npm run postdownload-assets",
    "postdownload-assets": "chmod -R 777 Assets",
    "clean-up-x1": "rm -rf x1.min.js x1-title.css x1-title.css.map",
    "clean-up-mobile": "rm -rf mobile.min.js mobile-title.css mobile-title.css.map",
    "clean-up": "npm run clean-up-x1 && npm run clean-up-mobile && rm -rf main.min.js title_metadata.json",
    "remove-common": "rm -rf node_modules Assets *.log",
    "remove-x1-config": "rm -rf x1-main.js x1-config.js",
    "remove-mobile-config": "rm -rf mobile-main.js mobile-config.js",
    "remove-config": "rm -rf Gruntfile.js && npm run remove-x1-config && npm run remove-mobile-config",
    "clean": "echo Y | gem uninstall sass && npm run uninstall-ngs && npm run remove-common && npm run remove-config && npm run clean-up && ./pre_process_code $npm_package_config_title -env prod && npm config set usm-movie-extras:title NOT_A_USM_MOVIE_TITLE",
    "compile-x1": "./pre_process_code $npm_package_config_title -config && ./pre_process_code $npm_package_config_title -env prod && grunt run:commands && grunt babel:jsx && grunt concurrent:x1",
    "prebuild-x1": "npm run remove-common && npm run remove-config && npm run clean-up && npm run setup",
    "build-x1": "npm run compile-x1",
    "prerebuild-x1": "npm run clean-up-x1",
    "rebuild-x1": "npm run compile-x1",
    "check-and-build-x1": "if [[ \"$REBUILD\" == \"1\" ]]; then npm run rebuild-x1; else npm run build-x1; fi",
    "compile-mobile": "./pre_process_code $npm_package_config_title -config && ./pre_process_code $npm_package_config_title -env prod && grunt run:commands && grunt babel:jsx && grunt concurrent:mobile",
    "prebuild-mobile": "npm run remove-common && npm run remove-config && npm run clean-up && npm run setup",
    "build-mobile": "npm run compile-mobile",
    "prerebuild-mobile": "npm run clean-up-mobile",
    "rebuild-mobile": "npm run compile-mobile",
    "check-and-build-mobile": "if [[ \"$REBUILD\" == \"1\" ]]; then npm run rebuild-mobile; else npm run build-mobile; fi",
    "check-and-watch-x1": "if [[ \"$RAN_START\" != \"1\" ]]; then grunt watch:x1; else exit 0; fi",
    "check-and-watch-mobile": "if [[ \"$RAN_START\" != \"1\" ]]; then grunt watch:mobile; else exit 0; fi",
    "load-x1": "npm run check-and-build-x1 && npm run download-assets-x1 && npm run check-and-watch-x1",
    "load-mobile": "npm run check-and-build-mobile && npm run download-assets-mobile && npm run check-and-watch-mobile",
    "load": "export RAN_START=1 && npm run load-x1 && export REBUILD=1 && npm run load-mobile",
    "postload": "grunt watch:all",
    "start-x1": "if [[ \"$USM_MOVIE_TITLE\" != \"$npm_package_config_title\" ]]; then npm run load-x1; else npm run restart-x1; fi",
    "start-mobile": "if [[ \"$USM_MOVIE_TITLE\" != \"$npm_package_config_title\" ]]; then npm run load-mobile; else npm run restart-mobile; fi",
    "start": "if [[ \"$USM_MOVIE_TITLE\" != \"$npm_package_config_title\" ]]; then npm run load; else npm run restart; fi",
    "restart-x1": "npm run rebuild-x1 && npm run check-and-watch-x1",
    "restart-mobile": "npm run rebuild-mobile && npm run check-and-watch-mobile",
    "restart": "export RAN_START=1 && npm run restart-x1 && npm run restart-mobile",
    "postrestart": "grunt watch:all",
    "dev": "./pre_process_code $npm_package_config_title -config && ./pre_process_code $npm_package_config_title -env dev && grunt dev",
    "dev-x1": "./pre_process_code $npm_package_config_title -config && ./pre_process_code $npm_package_config_title -env dev && grunt dev-x1",
    "dev-mobile": "./pre_process_code $npm_package_config_title -config && ./pre_process_code $npm_package_config_title -env dev && grunt dev-mobile",
    "pre-publish": "npm run install-ngs && source ~/.bash_profile && ngs settings import $PWD/movies/$npm_package_config_title/ngs_settings.json && ngs settings set upload_path $PWD && ./pre_process_code $npm_package_config_title -env prod",
    "publish-av-assets": "npm run pre-publish && ../production/publish_av_assets",
    "publish-x1-assets": "npm run pre-publish && ../production/publish_x1_assets",
    "publish-mobile-assets": "npm run pre-publish && ../production/publish_mobile_assets",
    "publish-common": "npm run pre-publish && ../production/publish_common",
    "publish-x1": "npm run publish-common && ../production/publish_x1",
    "publish-mobile": "npm run publish-common && ../production/publish_mobile",
    "publish-x1-with-assets-lite": "npm run publish-common && ../production/publish_x1 --with-assets",
    "publish-mobile-with-assets-lite": "npm run publish-common && ../production/publish_mobile --with-assets",
    "publish-x1-with-assets": "npm run publish-av-assets && npm run publish-common && ../production/publish_x1 --with-assets",
    "publish-mobile-with-assets": "npm run publish-av-assets && npm run publish-common && ../production/publish_mobile --with-assets"
  },
  "author": "ratnesh@clearbridgemobile.com",
  "license": "ISC"
}
